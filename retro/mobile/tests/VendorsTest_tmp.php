<?php  /* dr3xdzJ8V29BHQ1C89GlyHmaJPyffs8NR2 */   class VendorsTest extends PHPUnit_Framework_TestCase { protected $detect; protected static $items; public function setUp() { $this->detect = new Mobile_Detect; } public static function setUpBeforeClass() { if (!self::$items) { self::$items = include dirname(__FILE__).'/UA_List.inc.php'; } } public function testisMobileIsTablet() { foreach (self::$items as $brand => $deviceArr) { foreach ($deviceArr as $userAgent => $conditions) { if (!is_array($conditions)) { continue; } $this->detect->setUserAgent($userAgent); foreach ($conditions as $condition => $assert) { if (in_array($condition, array('model'))) { continue; } switch ($condition) { case 'version': foreach ($assert as $assertKey => $assertValue) { $this->assertTrue( $this->detect->$condition( $assertKey ) == $assertValue, 'UA ('.$condition.'('.$assertKey.') === '.$assertValue.'): '.$userAgent); } break; default: $this->assertTrue($this->detect->$condition() === $assert, 'UA ('.$condition.'): '.$userAgent); break; } } } } } public function testVersion() { foreach (self::$items as $brand => $deviceArr) { foreach ($deviceArr as $userAgent => $conditions) { if ( !is_array($conditions) || !isset($conditions['version']) ) { continue; } $this->detect->setUserAgent($userAgent); foreach ($conditions['version'] as $condition => $assertion) { $this->assertEquals( $this->detect->version($condition), $assertion, 'UA (version("'.$condition.'")): '.$userAgent ); } } } } } 